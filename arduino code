int butR = A0;
int butL = A1;
int buttonPlus = 2;
int buttonMinus = A2;

int latchPin =A3;
int clockPin = A4;
int serialPin = A5;

bool lastButRState = HIGH;
bool lastButLState = HIGH;
bool markL = false;
bool markR = false;

int buttonDecValL = 0;
int buttonDecValR = 0;

int led1 = 3;
int led2 = 4;
int led3 = 5;
int led4 = 6;
int led5 = 7;
int led6 = 8;
int led7 = 9;
int led8 = 10;
int led9 = 11;
int ledx = 12;

// Left LEDs
int leftLeds[5] = {led1, led2, led3, led4, led5};
// Right LEDs
int rightLeds[5] = {led6, led7, led8, led9, ledx};

void setup() 
{
  Serial.begin(9600);
  pinMode(butL, INPUT_PULLUP);
  pinMode(butR, INPUT_PULLUP);
  pinMode(buttonPlus, INPUT_PULLUP);
  pinMode(buttonMinus, INPUT_PULLUP);

  pinMode(latchPin, OUTPUT);
  pinMode(clockPin, OUTPUT);
  pinMode(serialPin, OUTPUT);

  for (int i = 0; i < 5; i++) 
  {
    pinMode(leftLeds[i], OUTPUT);
    pinMode(rightLeds[i], OUTPUT);
  }
}

void resetLeftLeds() 
{
  for (int i = 0; i < 5; i++) digitalWrite(leftLeds[i], LOW);
  buttonDecValL = 0;
  markL = false;
}

void resetRightLeds() 
{
  for (int i = 0; i < 5; i++) digitalWrite(rightLeds[i], LOW);
  buttonDecValR = 0;
  markR = false;
}

void resetOutputLeds() 
{
  digitalWrite(latchPin, LOW);
  shiftOut(serialPin, clockPin, MSBFIRST, 0x00);
  digitalWrite(latchPin, HIGH);
}

void digiWriteOutput(int val)
{
    digitalWrite(latchPin, LOW);
    shiftOut(serialPin, clockPin, MSBFIRST, val >= 0 ? val : (-val+64));
    digitalWrite(latchPin, HIGH);
    markL = false;
    markR = false;
    delay(300);
}

String dec_to_bin(int dec) 
{
  String res = "";
  for (int i = 4; i >= 0; i--) res += String((dec >> i) & 1);
  return res;
}

void digiWrite(int pins[], String state, int n) 
{
  for (int i = 0; i < n; i++) digitalWrite(pins[i], state[i] == '1' ? HIGH : LOW);
}

void loop() {

  // reset output LEDS
  if (digitalRead(buttonPlus) == LOW && digitalRead(buttonMinus) == LOW) resetOutputLeds();
  if (digitalRead(buttonPlus) == LOW && digitalRead(butR) == LOW) resetRightLeds();
  if (digitalRead(buttonPlus) == LOW && digitalRead(butL) == LOW) resetLeftLeds();

  // LED on the left
  bool currentButL = digitalRead(butL);
  if (lastButLState == HIGH && currentButL == LOW) 
  {
    buttonDecValL = (buttonDecValL + 1) % 32;
    digiWrite(leftLeds, dec_to_bin(buttonDecValL), 5);
    markL = true;
  }
  lastButLState = currentButL;

  // LED on the left
  bool currentButR = digitalRead(butR);
  if (lastButRState == HIGH && currentButR == LOW) 
  {
    buttonDecValR = (buttonDecValR + 1) % 32;
    digiWrite(rightLeds, dec_to_bin(buttonDecValR), 5);
    markR = true;
  }
  lastButRState = currentButR;

  // plus button
  if (digitalRead(buttonPlus) == LOW && markR && markL)
  {
    digiWriteOutput((buttonDecValR+buttonDecValL));
    Serial.println("the value sent is ");
    Serial.println(buttonDecValR+buttonDecValL);
  }
  if (digitalRead(buttonMinus) == LOW && markR && markL)
  {
    digiWriteOutput((buttonDecValL-buttonDecValR));
    Serial.println("the value sent is ");
    Serial.println(buttonDecValL-buttonDecValR);
  }

  delay(10); 
}
